{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///./src/main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".main.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nnew WebAssembly.Memory({ initial: 10, maximum: 100 });\r\n(() => __awaiter(void 0, void 0, void 0, function* () {\r\n    const wrapper = document.getElementById(\"wrapper\");\r\n    const canvas = document.getElementById(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const thread = 16;\r\n    const init = () => __awaiter(void 0, void 0, void 0, function* () {\r\n        console.time(\"loop time\");\r\n        setCanvasSize();\r\n        let pxPer = 6 / canvas.width;\r\n        for (let i = 0; i < 600; i++) {\r\n            pxPer = pxPer / 1.5;\r\n            yield draw(pxPer);\r\n        }\r\n        console.timeEnd(\"loop time\");\r\n    });\r\n    const draw = (pxPer) => __awaiter(void 0, void 0, void 0, function* () {\r\n        const centerX = -1.2622216276238453;\r\n        const centerY = -0.0459170016351388;\r\n        const promises = [];\r\n        for (let i = 0; i < thread; i++) {\r\n            const worker = new Worker(new URL(\"./test.worker.ts\", import.meta.url));\r\n            worker.postMessage({\r\n                width: canvas.width,\r\n                height: canvas.height,\r\n                thread,\r\n                pxPer,\r\n                centerX,\r\n                centerY,\r\n                i,\r\n            });\r\n            const promise = new Promise((resolve) => {\r\n                worker.addEventListener(\"message\", ({ data }) => resolve(data));\r\n            });\r\n            promises.push(promise);\r\n        }\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const pixels = imageData.data;\r\n        const pxs = (yield Promise.all(promises)).flat(1);\r\n        pxs.forEach((ary, x) => ary.forEach((color, y) => {\r\n            const base = (y * imageData.width + x) * 4;\r\n            if (color !== 0) {\r\n                pixels[base] = (color * 5) % 255;\r\n                pixels[base + 1] = (color * 5) % 255;\r\n                pixels[base + 2] = (color * 4) % 255;\r\n                pixels[base + 3] = 255;\r\n            }\r\n            else {\r\n                pixels[base] = 255;\r\n                pixels[base + 1] = 255;\r\n                pixels[base + 2] = 255;\r\n                pixels[base + 3] = 255;\r\n            }\r\n        }));\r\n        ctx.putImageData(imageData, 0, 0);\r\n    });\r\n    /*const draw = (pxPer: number) => {\r\n      const { width, height } = ctx.canvas;\r\n      //\r\n      for (let x = 0; x < width; x += 1) {\r\n        for (let y = 0; y < height; y += 1) {\r\n          const a = (x - width / 2) * pxPer + centerX;\r\n          const b = (y - height / 2) * pxPer + centerY;\r\n  \r\n          const isDivergence = check_divergence(a, b, 4096);\r\n          if (isDivergence !== 0) {\r\n            ctx.fillStyle = `hsl(${isDivergence * 8},80%,50%)`;\r\n            ctx.fillRect(x, y, 1, 1);\r\n          }\r\n        }\r\n      }\r\n    };*/\r\n    const setCanvasSize = () => {\r\n        canvas.style.height = wrapper.offsetHeight.toString() + \"px\";\r\n        canvas.height = wrapper.offsetHeight;\r\n        canvas.width = wrapper.offsetWidth;\r\n    };\r\n    init();\r\n}))();\r\nexport {};\r\n"],"names":["__webpack_require__","chunkId","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","b","baseURI","self","href","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","WebAssembly","Memory","initial","maximum","wrapper","getElementById","canvas","ctx","getContext","draw","pxPer","promises","i","worker","Worker","URL","postMessage","width","height","thread","centerX","centerY","promise","addEventListener","data","push","imageData","getImageData","pixels","all","flat","forEach","ary","x","color","y","base","putImageData","console","time","style","offsetHeight","toString","offsetWidth","timeEnd"],"sourceRoot":""}